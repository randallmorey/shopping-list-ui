<Store::Form
  @model={{@model}}
  @title={{t "titles.store.edit"}}
  @submit={{route-action "submit" @model}}
  @cancel={{route-action "cancel" @model}}
  @delete={{route-action "delete" @model}}>

  {{#if @model.categories}}
    <ListSet as |listSet|>
      <listSet.group as |group|>
        <group.heading>
          {{t "titles.store-item-category.order"}}
          {{#if @model.categoriesSaving}}
            <FaIcon @icon="circle-notch" @spin={{true}} />
          {{/if}}
        </group.heading>

        {{!--
        TODO: Sortable will break unless it is rerendered between routes.
              To accomplish this, we hack `loadingStoreRoute` to wait a little
              longer after loading is complete and the route is entered.  When
              the sortable is wrapped in this conditional, it will be force to
              unrender and rerender, which works around the bug for now.
        --}}
        {{#unless @model.loadingStoreRoute}}
          <List::Sortable
            @disabled={{or @model.isSaving @model.categoriesSaving}}
            @model={{@model.categoriesByOrder}}
            @onChange={{route-action "dragCategoryOrder"}}
            as |list|>
            {{#each @model.categoriesByOrder as |category|}}
              <list.item
                @model={{category}}
                @decrease={{route-action "decreaseCategoryOrder" category}}
                @increase={{route-action "increaseCategoryOrder" category}}
                @increaseDisabled=
                  {{eq category @model.categoriesByOrder.lastObject}}
                @decreaseDisabled=
                  {{eq category @model.categoriesByOrder.firstObject}}>
                {{category.itemCategory.name}}
              </list.item>
            {{/each}}
          </List::Sortable>
        {{/unless}}

      </listSet.group>
    </ListSet>
  {{/if}}

</Store::Form>
